// <auto-generated />
using System;
using API_Arcadia.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Arcadia.Data.Migrations
{
    [DbContext(typeof(ContextArcadia))]
    partial class ContextArcadiaModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Arcadia.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("IdHealth")
                        .HasColumnType("tinyint");

                    b.Property<int>("IdSpecies")
                        .HasColumnType("int");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdHealth");

                    b.HasIndex("IdSpecies");

                    b.ToTable("Animals", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.AnimalImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdAnimal");

                    b.ToTable("AnimalImages", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.Diet", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Diets", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.Habitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Habitats", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.HabitatImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdHabitat")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdHabitat");

                    b.ToTable("HabitatImages", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.Health", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Healths", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.OpeningHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("AfternoonClosing")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("AfternoonOpening")
                        .HasColumnType("time");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeOnly>("MorningClosing")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("MorningOpening")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("OpeningHours", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<byte>("Note")
                        .HasColumnType("tinyint");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.SizeUnit", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SizeUnits", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FemaleMaxSize")
                        .HasColumnType("real");

                    b.Property<float>("FemaleMaxWeight")
                        .HasColumnType("real");

                    b.Property<byte>("IdDiet")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdSizeUnit")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdWeightUnit")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Lifespan")
                        .HasColumnType("tinyint");

                    b.Property<float>("MaleMaxSize")
                        .HasColumnType("real");

                    b.Property<float>("MaleMaxWeight")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdDiet");

                    b.HasIndex("IdSizeUnit");

                    b.HasIndex("IdWeightUnit");

                    b.ToTable("Speciess", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.SpeciesHabitat", b =>
                {
                    b.Property<int>("IdHabitat")
                        .HasColumnType("int");

                    b.Property<int>("IdSpecies")
                        .HasColumnType("int");

                    b.HasKey("IdHabitat", "IdSpecies");

                    b.HasIndex("IdSpecies");

                    b.ToTable("SpeciesHabitats", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.VetVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Food")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("FoodWeight")
                        .HasColumnType("real");

                    b.Property<int>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<int?>("IdVet")
                        .HasColumnType("int");

                    b.Property<byte>("IdWeightUnit")
                        .HasColumnType("tinyint");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdWeightUnit");

                    b.ToTable("VetVisits", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.WeightUnit", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("WeightUnits", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.ZooService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ChildPrice")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FullPrice")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ZooServices", (string)null);
                });

            modelBuilder.Entity("API_Arcadia.Models.Animal", b =>
                {
                    b.HasOne("API_Arcadia.Models.Health", null)
                        .WithMany()
                        .HasForeignKey("IdHealth")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.Species", null)
                        .WithMany()
                        .HasForeignKey("IdSpecies")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.AnimalImage", b =>
                {
                    b.HasOne("API_Arcadia.Models.Animal", null)
                        .WithMany()
                        .HasForeignKey("IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.HabitatImage", b =>
                {
                    b.HasOne("API_Arcadia.Models.Habitat", null)
                        .WithMany()
                        .HasForeignKey("IdHabitat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.Species", b =>
                {
                    b.HasOne("API_Arcadia.Models.Diet", null)
                        .WithMany()
                        .HasForeignKey("IdDiet")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.SizeUnit", null)
                        .WithMany()
                        .HasForeignKey("IdSizeUnit")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.WeightUnit", null)
                        .WithMany()
                        .HasForeignKey("IdWeightUnit")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.SpeciesHabitat", b =>
                {
                    b.HasOne("API_Arcadia.Models.Habitat", null)
                        .WithMany()
                        .HasForeignKey("IdHabitat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.Species", null)
                        .WithMany()
                        .HasForeignKey("IdSpecies")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.VetVisit", b =>
                {
                    b.HasOne("API_Arcadia.Models.Animal", null)
                        .WithMany()
                        .HasForeignKey("IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.WeightUnit", null)
                        .WithMany()
                        .HasForeignKey("IdWeightUnit")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
