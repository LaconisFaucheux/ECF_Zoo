// <auto-generated />
using System;
using API_Arcadia.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Arcadia.Migrations
{
    [DbContext(typeof(ContextArcadia))]
    partial class ContextArcadiaModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Arcadia.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdHealth")
                        .HasColumnType("int");

                    b.Property<int>("IdSpecies")
                        .HasColumnType("int");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdHealth");

                    b.HasIndex("IdSpecies");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("API_Arcadia.Models.AnimalImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<string>("MiniSlug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdAnimal");

                    b.ToTable("AnimalImages");
                });

            modelBuilder.Entity("API_Arcadia.Models.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Diets");
                });

            modelBuilder.Entity("API_Arcadia.Models.Habitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Habitats");
                });

            modelBuilder.Entity("API_Arcadia.Models.HabitatImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdHabitat")
                        .HasColumnType("int");

                    b.Property<string>("MiniSlug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdHabitat");

                    b.ToTable("HabitatImages");
                });

            modelBuilder.Entity("API_Arcadia.Models.Health", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Healths");
                });

            modelBuilder.Entity("API_Arcadia.Models.OpeningHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly?>("AfternoonClosing")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("AfternoonOpening")
                        .HasColumnType("time");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeOnly?>("MorningClosing")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("MorningOpening")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("OpeningHours");
                });

            modelBuilder.Entity("API_Arcadia.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<byte>("Note")
                        .HasColumnType("tinyint");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("API_Arcadia.Models.SizeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SizeUnits");
                });

            modelBuilder.Entity("API_Arcadia.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("FemaleMaxSize")
                        .HasColumnType("real");

                    b.Property<float?>("FemaleMaxWeight")
                        .HasColumnType("real");

                    b.Property<int>("IdDiet")
                        .HasColumnType("int");

                    b.Property<int>("IdSizeUnit")
                        .HasColumnType("int");

                    b.Property<int>("IdWeightUnit")
                        .HasColumnType("int");

                    b.Property<byte>("Lifespan")
                        .HasColumnType("tinyint");

                    b.Property<float>("MaleMaxSize")
                        .HasColumnType("real");

                    b.Property<float>("MaleMaxWeight")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdDiet");

                    b.HasIndex("IdSizeUnit");

                    b.HasIndex("IdWeightUnit");

                    b.ToTable("Speciess");
                });

            modelBuilder.Entity("API_Arcadia.Models.SpeciesHabitat", b =>
                {
                    b.Property<int>("IdHabitat")
                        .HasColumnType("int");

                    b.Property<int>("IdSpecies")
                        .HasColumnType("int");

                    b.HasKey("IdHabitat", "IdSpecies");

                    b.HasIndex("IdSpecies");

                    b.ToTable("SpeciesHabitats");
                });

            modelBuilder.Entity("API_Arcadia.Models.VetVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Food")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("FoodWeight")
                        .HasColumnType("real");

                    b.Property<int>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<int?>("IdVet")
                        .HasColumnType("int");

                    b.Property<int>("IdWeightUnit")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdWeightUnit");

                    b.ToTable("VetVisits");
                });

            modelBuilder.Entity("API_Arcadia.Models.WeightUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("WeightUnits");
                });

            modelBuilder.Entity("API_Arcadia.Models.ZooService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("ChildPrice")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("FullPrice")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ZooServices");
                });

            modelBuilder.Entity("API_Arcadia.Models.Animal", b =>
                {
                    b.HasOne("API_Arcadia.Models.Health", "HealthData")
                        .WithMany()
                        .HasForeignKey("IdHealth")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.Species", "SpeciesData")
                        .WithMany()
                        .HasForeignKey("IdSpecies")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HealthData");

                    b.Navigation("SpeciesData");
                });

            modelBuilder.Entity("API_Arcadia.Models.AnimalImage", b =>
                {
                    b.HasOne("API_Arcadia.Models.Animal", null)
                        .WithMany("Pics")
                        .HasForeignKey("IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.HabitatImage", b =>
                {
                    b.HasOne("API_Arcadia.Models.Habitat", null)
                        .WithMany("Pics")
                        .HasForeignKey("IdHabitat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.Species", b =>
                {
                    b.HasOne("API_Arcadia.Models.Diet", "diet")
                        .WithMany()
                        .HasForeignKey("IdDiet")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.SizeUnit", "sizeUnit")
                        .WithMany()
                        .HasForeignKey("IdSizeUnit")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.WeightUnit", "weightUnit")
                        .WithMany()
                        .HasForeignKey("IdWeightUnit")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("diet");

                    b.Navigation("sizeUnit");

                    b.Navigation("weightUnit");
                });

            modelBuilder.Entity("API_Arcadia.Models.SpeciesHabitat", b =>
                {
                    b.HasOne("API_Arcadia.Models.Habitat", null)
                        .WithMany()
                        .HasForeignKey("IdHabitat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.Species", null)
                        .WithMany()
                        .HasForeignKey("IdSpecies")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Arcadia.Models.VetVisit", b =>
                {
                    b.HasOne("API_Arcadia.Models.Animal", "animal")
                        .WithMany()
                        .HasForeignKey("IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Arcadia.Models.WeightUnit", "foodWeightUnit")
                        .WithMany()
                        .HasForeignKey("IdWeightUnit")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("animal");

                    b.Navigation("foodWeightUnit");
                });

            modelBuilder.Entity("API_Arcadia.Models.Animal", b =>
                {
                    b.Navigation("Pics");
                });

            modelBuilder.Entity("API_Arcadia.Models.Habitat", b =>
                {
                    b.Navigation("Pics");
                });
#pragma warning restore 612, 618
        }
    }
}
